// <auto-generated />
using System;
using AnnouncementWebsite.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AnnouncementWebsite.Migrations
{
    [DbContext(typeof(AnnouncementContext))]
    partial class AnnouncementContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AnnouncementWebsite.Models.Announcement", b =>
                {
                    b.Property<int>("AnnouncementId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AnnouncementId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Announcements");

                    b.HasData(
                        new
                        {
                            AnnouncementId = 1,
                            CategoryId = 1,
                            DateAdded = new DateTime(2020, 10, 9, 19, 0, 55, 997, DateTimeKind.Local).AddTicks(6563),
                            Description = "Some First Description",
                            Title = "First"
                        },
                        new
                        {
                            AnnouncementId = 2,
                            CategoryId = 1,
                            DateAdded = new DateTime(2020, 10, 9, 19, 0, 56, 2, DateTimeKind.Local).AddTicks(358),
                            Description = "Some Second Description",
                            Title = "Second"
                        },
                        new
                        {
                            AnnouncementId = 3,
                            CategoryId = 2,
                            DateAdded = new DateTime(2020, 10, 9, 19, 0, 56, 2, DateTimeKind.Local).AddTicks(535),
                            Description = "Some Third Description",
                            Title = "Third"
                        });
                });

            modelBuilder.Entity("AnnouncementWebsite.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CategoryName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            CategoryName = "Vehicle"
                        },
                        new
                        {
                            CategoryId = 2,
                            CategoryName = "Others"
                        });
                });

            modelBuilder.Entity("AnnouncementWebsite.Models.Announcement", b =>
                {
                    b.HasOne("AnnouncementWebsite.Models.Category", "Category")
                        .WithMany("Announcements")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
