// <auto-generated />
using System;
using AnnouncementWebsite.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AnnouncementWebsite.Migrations
{
    [DbContext(typeof(AnnouncementContext))]
    [Migration("20201010154332_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AnnouncementWebsite.Models.Announcement", b =>
                {
                    b.Property<int>("AnnouncementId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AnnouncementId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Announcements");

                    b.HasData(
                        new
                        {
                            AnnouncementId = 1,
                            CategoryId = 1,
                            DateAdded = new DateTime(2020, 10, 10, 18, 43, 31, 893, DateTimeKind.Local).AddTicks(9543),
                            Description = "Some First Description",
                            Title = "First"
                        },
                        new
                        {
                            AnnouncementId = 2,
                            CategoryId = 1,
                            DateAdded = new DateTime(2020, 10, 10, 18, 43, 31, 901, DateTimeKind.Local).AddTicks(5197),
                            Description = "Some Second Description",
                            Title = "Second"
                        },
                        new
                        {
                            AnnouncementId = 3,
                            CategoryId = 2,
                            DateAdded = new DateTime(2020, 10, 10, 18, 43, 31, 901, DateTimeKind.Local).AddTicks(5510),
                            Description = "Some Third Description",
                            Title = "Third"
                        });
                });

            modelBuilder.Entity("AnnouncementWebsite.Models.AnnouncementImage", b =>
                {
                    b.Property<int>("AnnouncementId")
                        .HasColumnType("int");

                    b.Property<int>("ImageId")
                        .HasColumnType("int");

                    b.Property<int>("AnnouncementImageId")
                        .HasColumnType("int");

                    b.HasKey("AnnouncementId", "ImageId");

                    b.HasIndex("ImageId");

                    b.ToTable("AnnouncementImages");

                    b.HasData(
                        new
                        {
                            AnnouncementId = 1,
                            ImageId = 1,
                            AnnouncementImageId = 1
                        },
                        new
                        {
                            AnnouncementId = 2,
                            ImageId = 2,
                            AnnouncementImageId = 2
                        },
                        new
                        {
                            AnnouncementId = 3,
                            ImageId = 1,
                            AnnouncementImageId = 3
                        });
                });

            modelBuilder.Entity("AnnouncementWebsite.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CategoryName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            CategoryName = "Vehicle"
                        },
                        new
                        {
                            CategoryId = 2,
                            CategoryName = "Others"
                        });
                });

            modelBuilder.Entity("AnnouncementWebsite.Models.Image", b =>
                {
                    b.Property<int>("ImageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ImageId");

                    b.ToTable("Images");

                    b.HasData(
                        new
                        {
                            ImageId = 1,
                            Name = "1.jpg"
                        },
                        new
                        {
                            ImageId = 2,
                            Name = "2.jpg"
                        });
                });

            modelBuilder.Entity("AnnouncementWebsite.Models.Announcement", b =>
                {
                    b.HasOne("AnnouncementWebsite.Models.Category", "Category")
                        .WithMany("Announcements")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AnnouncementWebsite.Models.AnnouncementImage", b =>
                {
                    b.HasOne("AnnouncementWebsite.Models.Announcement", "Announcement")
                        .WithMany("AnnouncementImages")
                        .HasForeignKey("AnnouncementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AnnouncementWebsite.Models.Image", "Image")
                        .WithMany("AnnouncementImages")
                        .HasForeignKey("ImageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
